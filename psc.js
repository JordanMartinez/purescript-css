(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by psc version 0.6.9.3
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    
    function cons(e) {
      return function(l) {
        return [e].concat(l);
      };
    }
    ;
    
    function showNumberImpl(n) {
      return n.toString();
    }
    ;
    
    function numAdd(n1) {
      return function(n2) {
        return n1 + n2;
      };
    }
    ;
    
    function numSub(n1) {
      return function(n2) {
        return n1 - n2;
      };
    }
    ;
    
    function numMul(n1) {
      return function(n2) {
        return n1 * n2;
      };
    }
    ;
    
    function numDiv(n1) {
      return function(n2) {
        return n1 / n2;
      };
    }
    ;
    
    function refEq(r1) {
      return function(r2) {
        return r1 === r2;
      };
    }
    ;
    
    function refIneq(r1) {
      return function(r2) {
        return r1 !== r2;
      };
    }
    ;
    
    function unsafeCompareImpl(lt) {
      return function(eq) {
        return function(gt) {
          return function(x) {
            return function(y) {
              return x < y ? lt : x > y ? gt : eq;
            };
          };
        };
      };
    }
    ;
    
    function boolAnd(b1) {
      return function(b2) {
        return b1 && b2;
      };
    }
    ;
    
    function boolOr(b1) {
      return function(b2) {
        return b1 || b2;
      };
    }
    ;
    
    function boolNot(b) {
      return !b;
    }
    ;
    
    function concatString(s1) {
      return function(s2) {
        return s1 + s2;
      };
    }
    ;
    var Unit = function (x) {
        return x;
    };
    var LT = (function () {
        function LT() {

        };
        LT.value = new LT();
        return LT;
    })();
    var GT = (function () {
        function GT() {

        };
        GT.value = new GT();
        return GT;
    })();
    var EQ = (function () {
        function EQ() {

        };
        EQ.value = new EQ();
        return EQ;
    })();
    var Semigroupoid = function ($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    var Show = function (show) {
        this.show = show;
    };
    var Functor = function ($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    var Apply = function ($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    var Bind = function ($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    var Semiring = function ($times, $plus, one, zero) {
        this["*"] = $times;
        this["+"] = $plus;
        this.one = one;
        this.zero = zero;
    };
    var ModuloSemiring = function ($div, __superclass_Prelude$dotSemiring_0, mod) {
        this["/"] = $div;
        this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
        this.mod = mod;
    };
    var Ring = function ($minus, __superclass_Prelude$dotSemiring_0) {
        this["-"] = $minus;
        this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    };
    var Eq = function ($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    var Ord = function (__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    var BoolLike = function ($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    var Semigroup = function ($less$greater) {
        this["<>"] = $less$greater;
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $colon = cons;
    var $div = function (dict) {
        return dict["/"];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_2) {
        return $less$greater(__dict_Semigroup_2);
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var zero = function (dict) {
        return dict.zero;
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var showNumber = new Show(showNumberImpl);
    var show = function (dict) {
        return dict.show;
    };
    var semiringNumber = new Semiring(numMul, numAdd, 1, 0);
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupString = new Semigroup(concatString);
    var ringNumber = new Ring(numSub, function () {
        return semiringNumber;
    });
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var not = function (dict) {
        return dict.not;
    };
    var negate = function (__dict_Ring_6) {
        return function (a) {
            return $minus(__dict_Ring_6)(zero(__dict_Ring_6["__superclass_Prelude.Semiring_0"]()))(a);
        };
    };
    var moduloSemiringNumber = new ModuloSemiring(numDiv, function () {
        return semiringNumber;
    }, function (_40) {
        return function (_41) {
            return 0;
        };
    });
    var liftA1 = function (__dict_Applicative_8) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_8["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_8)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqString = new Eq(refIneq, refEq);
    var ordString = new Ord(function () {
        return eqString;
    }, unsafeCompare);
    var compare = function (dict) {
        return dict.compare;
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var ap = function (__dict_Monad_16) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(f)(function (_8) {
                    return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(a)(function (_7) {
                        return $$return(__dict_Monad_16)(_8(_7));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        LT: LT, 
        GT: GT, 
        EQ: EQ, 
        Semigroup: Semigroup, 
        BoolLike: BoolLike, 
        Ord: Ord, 
        Eq: Eq, 
        Ring: Ring, 
        ModuloSemiring: ModuloSemiring, 
        Semiring: Semiring, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Show: Show, 
        Category: Category, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "++": $plus$plus, 
        "<>": $less$greater, 
        not: not, 
        compare: compare, 
        "==": $eq$eq, 
        negate: negate, 
        "-": $minus, 
        "/": $div, 
        zero: zero, 
        ap: ap, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "<$>": $less$dollar$greater, 
        show: show, 
        cons: cons, 
        ":": $colon, 
        "$": $dollar, 
        id: id, 
        ">>>": $greater$greater$greater, 
        "<<<": $less$less$less, 
        flip: flip, 
        semigroupoidArr: semigroupoidArr, 
        categoryArr: categoryArr, 
        showNumber: showNumber, 
        semiringNumber: semiringNumber, 
        ringNumber: ringNumber, 
        moduloSemiringNumber: moduloSemiringNumber, 
        eqString: eqString, 
        ordString: ordString, 
        boolLikeBoolean: boolLikeBoolean, 
        semigroupString: semigroupString
    };
})();
var PS = PS || {};
PS.Data_Profunctor = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Profunctor = function (dimap) {
        this.dimap = dimap;
    };
    var profunctorArr = new Profunctor(function (a2b) {
        return function (c2d) {
            return function (b2c) {
                return Prelude[">>>"](Prelude.semigroupoidArr)(a2b)(Prelude[">>>"](Prelude.semigroupoidArr)(b2c)(c2d));
            };
        };
    });
    return {
        Profunctor: Profunctor, 
        profunctorArr: profunctorArr
    };
})();
var PS = PS || {};
PS.Css_String = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var IsString = function (fromString) {
        this.fromString = fromString;
    };
    var isStringString = new IsString(Prelude.id(Prelude.categoryArr));
    var fromString = function (dict) {
        return dict.fromString;
    };
    return {
        IsString: IsString, 
        fromString: fromString, 
        isStringString: isStringString
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function returnE(a) {
      return function() {
        return a;
      };
    }
    ;
    
    function bindE(a) {
      return function(f) {
        return function() {
          return f(a())();
        };
      };
    }
    ;
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Extend = PS.Control_Extend;
    var Left = (function () {
        function Left(value0) {
            this.value0 = value0;
        };
        Left.create = function (value0) {
            return new Left(value0);
        };
        return Left;
    })();
    var Right = (function () {
        function Right(value0) {
            this.value0 = value0;
        };
        Right.create = function (value0) {
            return new Right(value0);
        };
        return Right;
    })();
    var either = function (f) {
        return function (g) {
            return function (_80) {
                if (_80 instanceof Left) {
                    return f(_80.value0);
                };
                if (_80 instanceof Right) {
                    return g(_80.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    return {
        Left: Left, 
        Right: Right, 
        either: either
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Extend = PS.Control_Extend;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Plus = PS.Control_Plus;
    var Nothing = (function () {
        function Nothing() {

        };
        Nothing.value = new Nothing();
        return Nothing;
    })();
    var Just = (function () {
        function Just(value0) {
            this.value0 = value0;
        };
        Just.create = function (value0) {
            return new Just(value0);
        };
        return Just;
    })();
    var semigroupMaybe = function (__dict_Semigroup_84) {
        return new Prelude.Semigroup(function (_99) {
            return function (_100) {
                if (_99 instanceof Nothing) {
                    return _100;
                };
                if (_100 instanceof Nothing) {
                    return _99;
                };
                if (_99 instanceof Just && _100 instanceof Just) {
                    return new Just(Prelude["<>"](__dict_Semigroup_84)(_99.value0)(_100.value0));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var maybe = function (b) {
        return function (f) {
            return function (_93) {
                if (_93 instanceof Nothing) {
                    return b;
                };
                if (_93 instanceof Just) {
                    return f(_93.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var functorMaybe = new Prelude.Functor(function (fn) {
        return function (_94) {
            if (_94 instanceof Just) {
                return new Just(fn(_94.value0));
            };
            return Nothing.value;
        };
    });
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr));
    };
    var applyMaybe = new Prelude.Apply(function (_95) {
        return function (x) {
            if (_95 instanceof Just) {
                return Prelude["<$>"](functorMaybe)(_95.value0)(x);
            };
            if (_95 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorMaybe;
    });
    var bindMaybe = new Prelude.Bind(function (_97) {
        return function (k) {
            if (_97 instanceof Just) {
                return k(_97.value0);
            };
            if (_97 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyMaybe;
    });
    return {
        Nothing: Nothing, 
        Just: Just, 
        fromMaybe: fromMaybe, 
        maybe: maybe, 
        functorMaybe: functorMaybe, 
        applyMaybe: applyMaybe, 
        bindMaybe: bindMaybe, 
        semigroupMaybe: semigroupMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function drop (n) {  return function (l) {    return l.slice(n);  };};
    function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
    var sortBy = function (comp) {
        return function (xs) {
            var comp$prime = function (x) {
                return function (y) {
                    var _591 = comp(x)(y);
                    if (_591 instanceof Prelude.GT) {
                        return 1;
                    };
                    if (_591 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_591 instanceof Prelude.LT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return sortJS(comp$prime)(xs);
        };
    };
    var sort = function (__dict_Ord_87) {
        return function (xs) {
            return sortBy(Prelude.compare(__dict_Ord_87))(xs);
        };
    };
    var singleton = function (a) {
        return [ a ];
    };
    var semigroupArray = new Prelude.Semigroup(append);
    var mapMaybe = function (f) {
        return concatMap(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.maybe([  ])(singleton))(f));
    };
    var functorArray = new Prelude.Functor(map);
    var monadArray = new Prelude.Monad(function () {
        return applicativeArray;
    }, function () {
        return bindArray;
    });
    var bindArray = new Prelude.Bind(Prelude.flip(concatMap), function () {
        return applyArray;
    });
    var applyArray = new Prelude.Apply(Prelude.ap(monadArray), function () {
        return functorArray;
    });
    var applicativeArray = new Prelude.Applicative(function () {
        return applyArray;
    }, singleton);
    return {
        sortBy: sortBy, 
        sort: sort, 
        concatMap: concatMap, 
        drop: drop, 
        append: append, 
        mapMaybe: mapMaybe, 
        map: map, 
        singleton: singleton, 
        functorArray: functorArray, 
        applyArray: applyArray, 
        applicativeArray: applicativeArray, 
        bindArray: bindArray, 
        monadArray: monadArray, 
        semigroupArray: semigroupArray
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidString = new Monoid(function () {
        return Prelude.semigroupString;
    }, "");
    var monoidMaybe = function (__dict_Semigroup_96) {
        return new Monoid(function () {
            return Data_Maybe.semigroupMaybe(__dict_Semigroup_96);
        }, Data_Maybe.Nothing.value);
    };
    var monoidArray = new Monoid(function () {
        return Data_Array.semigroupArray;
    }, [  ]);
    var mempty = function (dict) {
        return dict.mempty;
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidString: monoidString, 
        monoidArray: monoidArray, 
        monoidMaybe: monoidMaybe
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Tuple = (function () {
        function Tuple(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Tuple.create = function (value0) {
            return function (value1) {
                return new Tuple(value0, value1);
            };
        };
        return Tuple;
    })();
    var uncurry = function (f) {
        return function (_205) {
            return f(_205.value0)(_205.value1);
        };
    };
    var snd = function (_204) {
        return _204.value1;
    };
    var functorTuple = new Prelude.Functor(function (f) {
        return function (_217) {
            return new Tuple(_217.value0, f(_217.value1));
        };
    });
    return {
        Tuple: Tuple, 
        uncurry: uncurry, 
        snd: snd, 
        functorTuple: functorTuple
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var WriterT = function (x) {
        return x;
    };
    var runWriterT = function (_256) {
        return _256;
    };
    var mapWriterT = function (f) {
        return function (m) {
            return WriterT(f(runWriterT(m)));
        };
    };
    var functorWriterT = function (__dict_Functor_232) {
        return new Prelude.Functor(function (f) {
            return mapWriterT(Prelude["<$>"](__dict_Functor_232)(function (_255) {
                return new Data_Tuple.Tuple(f(_255.value0), _255.value1);
            }));
        });
    };
    var applyWriterT = function (__dict_Monoid_236) {
        return function (__dict_Apply_237) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return WriterT((function () {
                        var k = function (_257) {
                            return function (_258) {
                                return new Data_Tuple.Tuple(_257.value0(_258.value0), Prelude["<>"](__dict_Monoid_236["__superclass_Prelude.Semigroup_0"]())(_257.value1)(_258.value1));
                            };
                        };
                        return Prelude["<*>"](__dict_Apply_237)(Prelude["<$>"](__dict_Apply_237["__superclass_Prelude.Functor_0"]())(k)(runWriterT(f)))(runWriterT(v));
                    })());
                };
            }, function () {
                return functorWriterT(__dict_Apply_237["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var bindWriterT = function (__dict_Monoid_234) {
        return function (__dict_Monad_235) {
            return new Prelude.Bind(function (m) {
                return function (k) {
                    return WriterT(Prelude[">>="](__dict_Monad_235["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (_27) {
                        return Prelude[">>="](__dict_Monad_235["__superclass_Prelude.Bind_1"]())(runWriterT(k(_27.value0)))(function (_26) {
                            return Prelude["return"](__dict_Monad_235)(new Data_Tuple.Tuple(_26.value0, Prelude["<>"](__dict_Monoid_234["__superclass_Prelude.Semigroup_0"]())(_27.value1)(_26.value1)));
                        });
                    }));
                };
            }, function () {
                return applyWriterT(__dict_Monoid_234)((__dict_Monad_235["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
            });
        };
    };
    var applicativeWriterT = function (__dict_Monoid_238) {
        return function (__dict_Applicative_239) {
            return new Prelude.Applicative(function () {
                return applyWriterT(__dict_Monoid_238)(__dict_Applicative_239["__superclass_Prelude.Apply_0"]());
            }, function (a) {
                return WriterT(Prelude.pure(__dict_Applicative_239)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_238))));
            });
        };
    };
    var monadWriterT = function (__dict_Monoid_225) {
        return function (__dict_Monad_226) {
            return new Prelude.Monad(function () {
                return applicativeWriterT(__dict_Monoid_225)(__dict_Monad_226["__superclass_Prelude.Applicative_0"]());
            }, function () {
                return bindWriterT(__dict_Monoid_225)(__dict_Monad_226);
            });
        };
    };
    return {
        WriterT: WriterT, 
        mapWriterT: mapWriterT, 
        runWriterT: runWriterT, 
        functorWriterT: functorWriterT, 
        applyWriterT: applyWriterT, 
        applicativeWriterT: applicativeWriterT, 
        bindWriterT: bindWriterT, 
        monadWriterT: monadWriterT
    };
})();
var PS = PS || {};
PS.Data_Profunctor_Strong = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Tuple = PS.Data_Tuple;
    var Strong = function (__superclass_Data$dotProfunctor$dotProfunctor_0, first, second) {
        this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
        this.first = first;
        this.second = second;
    };
    var strongArr = new Strong(function () {
        return Data_Profunctor.profunctorArr;
    }, function (a2b) {
        return function (_261) {
            return new Data_Tuple.Tuple(a2b(_261.value0), _261.value1);
        };
    }, Prelude["<$>"](Data_Tuple.functorTuple));
    var second = function (dict) {
        return dict.second;
    };
    return {
        Strong: Strong, 
        second: second, 
        strongArr: strongArr
    };
})();
var PS = PS || {};
PS.Data_Tuple_Nested = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var tuple7 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d), e), f), g);
                            };
                        };
                    };
                };
            };
        };
    };
    var tuple4 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d);
                };
            };
        };
    };
    var tuple3 = function (a) {
        return function (b) {
            return function (c) {
                return new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c);
            };
        };
    };
    var tuple2 = Data_Tuple.Tuple.create;
    return {
        tuple7: tuple7, 
        tuple4: tuple4, 
        tuple3: tuple3, 
        tuple2: tuple2
    };
})();
var PS = PS || {};
PS.Data_Monoid_First = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var First = function (x) {
        return x;
    };
    var semigroupFirst = new Prelude.Semigroup(function (_283) {
        return function (second) {
            if (_283 instanceof Data_Maybe.Just) {
                return _283;
            };
            return second;
        };
    });
    var runFirst = function (_271) {
        return _271;
    };
    var monoidFirst = new Data_Monoid.Monoid(function () {
        return semigroupFirst;
    }, Data_Maybe.Nothing.value);
    return {
        First: First, 
        runFirst: runFirst, 
        semigroupFirst: semigroupFirst, 
        monoidFirst: monoidFirst
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid_Additive = PS.Data_Monoid_Additive;
    var Data_Monoid_Dual = PS.Data_Monoid_Dual;
    var Data_Monoid_Last = PS.Data_Monoid_Last;
    var Data_Monoid_Multiplicative = PS.Data_Monoid_Multiplicative;
    var Data_Tuple = PS.Data_Tuple;
    
  function foldrArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = xs.length - 1; i >= 0; --i) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  }
  ;
    
  function foldlArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = 0, len = xs.length; i < len; ++i) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  }
  ;
    var Foldable = function (foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    var foldr = function (dict) {
        return dict.foldr;
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var intercalate = function (__dict_Foldable_277) {
        return function (__dict_Monoid_278) {
            return function (sep) {
                return function (xs) {
                    var go = function (_322) {
                        return function (x) {
                            if (_322.init) {
                                return {
                                    init: false, 
                                    acc: x
                                };
                            };
                            return {
                                init: false, 
                                acc: Prelude["<>"](__dict_Monoid_278["__superclass_Prelude.Semigroup_0"]())(_322.acc)(Prelude["<>"](__dict_Monoid_278["__superclass_Prelude.Semigroup_0"]())(sep)(x))
                            };
                        };
                    };
                    return (foldl(__dict_Foldable_277)(go)({
                        init: true, 
                        acc: Data_Monoid.mempty(__dict_Monoid_278)
                    })(xs)).acc;
                };
            };
        };
    };
    var mconcat = function (__dict_Foldable_279) {
        return function (__dict_Monoid_280) {
            return foldl(__dict_Foldable_279)(Prelude["<>"](__dict_Monoid_280["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_280));
        };
    };
    var foldableArray = new Foldable(function (__dict_Monoid_289) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_289["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_289))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var lookup = function (__dict_Eq_293) {
        return function (__dict_Foldable_294) {
            return function (a) {
                return function (f) {
                    return Data_Monoid_First.runFirst(foldMap(__dict_Foldable_294)(Data_Monoid_First.monoidFirst)(function (_297) {
                        var _632 = Prelude["=="](__dict_Eq_293)(a)(_297.value0);
                        if (_632) {
                            return new Data_Maybe.Just(_297.value1);
                        };
                        if (!_632) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match");
                    })(f));
                };
            };
        };
    };
    return {
        Foldable: Foldable, 
        foldlArray: foldlArray, 
        foldrArray: foldrArray, 
        lookup: lookup, 
        intercalate: intercalate, 
        mconcat: mconcat, 
        foldMap: foldMap, 
        foldl: foldl, 
        foldr: foldr, 
        foldableArray: foldableArray
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Char = PS.Data_Char;
    var Prelude = PS.Prelude;
    var Data_String_Unsafe = PS.Data_String_Unsafe;
    var Data_Maybe = PS.Data_Maybe;
    
    function take(n) {
      return function(s) {
        return s.substr(0, n);
      };
    }
    ;
    
    function drop(n) {
      return function(s) {
        return s.substr(n);
      };
    }
    ;
    return {
        drop: drop, 
        take: take
    };
})();
var PS = PS || {};
PS.Css_Selector = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_String = PS.Data_String;
    var Css_String = PS.Css_String;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Array = PS.Data_Array;
    var Id = (function () {
        function Id(value0) {
            this.value0 = value0;
        };
        Id.create = function (value0) {
            return new Id(value0);
        };
        return Id;
    })();
    var Class = (function () {
        function Class(value0) {
            this.value0 = value0;
        };
        Class.create = function (value0) {
            return new Class(value0);
        };
        return Class;
    })();
    var Attr = (function () {
        function Attr(value0) {
            this.value0 = value0;
        };
        Attr.create = function (value0) {
            return new Attr(value0);
        };
        return Attr;
    })();
    var AttrVal = (function () {
        function AttrVal(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        AttrVal.create = function (value0) {
            return function (value1) {
                return new AttrVal(value0, value1);
            };
        };
        return AttrVal;
    })();
    var AttrBegins = (function () {
        function AttrBegins(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        AttrBegins.create = function (value0) {
            return function (value1) {
                return new AttrBegins(value0, value1);
            };
        };
        return AttrBegins;
    })();
    var AttrEnds = (function () {
        function AttrEnds(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        AttrEnds.create = function (value0) {
            return function (value1) {
                return new AttrEnds(value0, value1);
            };
        };
        return AttrEnds;
    })();
    var AttrContains = (function () {
        function AttrContains(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        AttrContains.create = function (value0) {
            return function (value1) {
                return new AttrContains(value0, value1);
            };
        };
        return AttrContains;
    })();
    var AttrSpace = (function () {
        function AttrSpace(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        AttrSpace.create = function (value0) {
            return function (value1) {
                return new AttrSpace(value0, value1);
            };
        };
        return AttrSpace;
    })();
    var AttrHyph = (function () {
        function AttrHyph(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        AttrHyph.create = function (value0) {
            return function (value1) {
                return new AttrHyph(value0, value1);
            };
        };
        return AttrHyph;
    })();
    var Pseudo = (function () {
        function Pseudo(value0) {
            this.value0 = value0;
        };
        Pseudo.create = function (value0) {
            return new Pseudo(value0);
        };
        return Pseudo;
    })();
    var PseudoFunc = (function () {
        function PseudoFunc(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        PseudoFunc.create = function (value0) {
            return function (value1) {
                return new PseudoFunc(value0, value1);
            };
        };
        return PseudoFunc;
    })();
    var Refinement = function (x) {
        return x;
    };
    var Star = (function () {
        function Star() {

        };
        Star.value = new Star();
        return Star;
    })();
    var Elem = (function () {
        function Elem(value0) {
            this.value0 = value0;
        };
        Elem.create = function (value0) {
            return new Elem(value0);
        };
        return Elem;
    })();
    var PathChild = (function () {
        function PathChild(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        PathChild.create = function (value0) {
            return function (value1) {
                return new PathChild(value0, value1);
            };
        };
        return PathChild;
    })();
    var Deep = (function () {
        function Deep(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Deep.create = function (value0) {
            return function (value1) {
                return new Deep(value0, value1);
            };
        };
        return Deep;
    })();
    var Adjacent = (function () {
        function Adjacent(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Adjacent.create = function (value0) {
            return function (value1) {
                return new Adjacent(value0, value1);
            };
        };
        return Adjacent;
    })();
    var Combined = (function () {
        function Combined(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Combined.create = function (value0) {
            return function (value1) {
                return new Combined(value0, value1);
            };
        };
        return Combined;
    })();
    var Selector = (function () {
        function Selector(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Selector.create = function (value0) {
            return function (value1) {
                return new Selector(value0, value1);
            };
        };
        return Selector;
    })();
    var $$with = function (_323) {
        return function (_324) {
            return new Selector(Prelude["++"](Data_Array.semigroupArray)(_323.value0)(_324), _323.value1);
        };
    };
    var $hash$hash = $$with;
    var star = new Selector([  ], Star.value);
    var isStringSelector = new Css_String.IsString(function (s) {
        var _639 = Data_String.take(1)(s);
        if (_639 === "#") {
            return new Selector([ Id.create(Data_String.drop(1)(s)) ], Star.value);
        };
        if (_639 === ".") {
            return new Selector([ Class.create(Data_String.drop(1)(s)) ], Star.value);
        };
        return new Selector([  ], new Elem(s));
    });
    var isStringRefinement = new Css_String.IsString(function (s) {
        return [ (function () {
            var _640 = Data_String.take(1)(s);
            if (_640 === "#") {
                return Id.create(Data_String.drop(1)(s));
            };
            if (_640 === ".") {
                return Class.create(Data_String.drop(1)(s));
            };
            if (_640 === ":") {
                return Pseudo.create(Data_String.drop(1)(s));
            };
            if (_640 === "@") {
                return Attr.create(Data_String.drop(1)(s));
            };
            return new Attr(s);
        })() ];
    });
    var eqPredicate = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqPredicate)(a)(b);
        };
    }, function (_325) {
        return function (_326) {
            if (_325 instanceof Id && _326 instanceof Id) {
                return _325.value0 === _326.value0;
            };
            throw new Error("Failed pattern match");
        };
    });
    var ordPredicate = new Prelude.Ord(function () {
        return eqPredicate;
    }, function (_327) {
        return function (_328) {
            if (_327 instanceof Id && _328 instanceof Id) {
                return Prelude.compare(Prelude.ordString)(_327.value0)(_328.value0);
            };
            throw new Error("Failed pattern match");
        };
    });
    var element = function (e) {
        return new Selector([  ], new Elem(e));
    };
    var deep = function (a) {
        return function (b) {
            return new Selector([  ], new Deep(a, b));
        };
    };
    var $times$times = deep;
    var child = function (a) {
        return function (b) {
            return new Selector([  ], new PathChild(a, b));
        };
    };
    var $bar$greater = child;
    return {
        Selector: Selector, 
        Star: Star, 
        Elem: Elem, 
        PathChild: PathChild, 
        Deep: Deep, 
        Adjacent: Adjacent, 
        Combined: Combined, 
        Refinement: Refinement, 
        Id: Id, 
        Class: Class, 
        Attr: Attr, 
        AttrVal: AttrVal, 
        AttrBegins: AttrBegins, 
        AttrEnds: AttrEnds, 
        AttrContains: AttrContains, 
        AttrSpace: AttrSpace, 
        AttrHyph: AttrHyph, 
        Pseudo: Pseudo, 
        PseudoFunc: PseudoFunc, 
        "##": $hash$hash, 
        "with": $$with, 
        "|>": $bar$greater, 
        child: child, 
        "**": $times$times, 
        deep: deep, 
        element: element, 
        star: star, 
        eqPredicate: eqPredicate, 
        ordPredicate: ordPredicate, 
        isStringRefinement: isStringRefinement, 
        isStringSelector: isStringSelector
    };
})();
var PS = PS || {};
PS.Css_Elements = (function () {
    "use strict";
    var Css_String = PS.Css_String;
    var Prelude = PS.Prelude;
    var Css_Selector = PS.Css_Selector;
    var html = Css_String.fromString(Css_Selector.isStringSelector)("html");
    var h1 = Css_String.fromString(Css_Selector.isStringSelector)("h1");
    var body = Css_String.fromString(Css_Selector.isStringSelector)("body");
    var a = Css_String.fromString(Css_Selector.isStringSelector)("a");
    return {
        html: html, 
        h1: h1, 
        a: a, 
        body: body
    };
})();
var PS = PS || {};
PS.Css_Pseudo = (function () {
    "use strict";
    var Css_String = PS.Css_String;
    var Prelude = PS.Prelude;
    var Css_Selector = PS.Css_Selector;
    var hover = Css_String.fromString(Css_Selector.isStringRefinement)(":hover");
    return {
        hover: hover
    };
})();
var PS = PS || {};
PS.Data_Array_NonEmpty = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Array = PS.Data_Array;
    var Data_Array_Unsafe = PS.Data_Array_Unsafe;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Maybe = PS.Data_Maybe;
    var NonEmpty = (function () {
        function NonEmpty(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        NonEmpty.create = function (value0) {
            return function (value1) {
                return new NonEmpty(value0, value1);
            };
        };
        return NonEmpty;
    })();
    var $colon$bar = function (a) {
        return function (as) {
            return new NonEmpty(a, as);
        };
    };
    var toArray = function (_350) {
        return Prelude[":"](_350.value0)(_350.value1);
    };
    var singleton = function (a) {
        return new NonEmpty(a, [  ]);
    };
    var map = function (f) {
        return function (_361) {
            return $colon$bar(f(_361.value0))(Data_Array.map(f)(_361.value1));
        };
    };
    var functorNonEmpty = new Prelude.Functor(map);
    var foldableNonEmpty = new Data_Foldable.Foldable(function (__dict_Monoid_335) {
        return function (f) {
            return function (as) {
                return Data_Foldable.foldMap(Data_Foldable.foldableArray)(__dict_Monoid_335)(f)(toArray(as));
            };
        };
    }, function (f) {
        return function (b) {
            return function (as) {
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(b)(toArray(as));
            };
        };
    }, function (f) {
        return function (b) {
            return function (as) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(b)(toArray(as));
            };
        };
    });
    var drop = function (_359) {
        return function (_360) {
            if (_359 === 0) {
                return toArray(_360);
            };
            if (_359 === 1) {
                return _360.value1;
            };
            return Data_Array.drop(_359 - 1)(_360.value1);
        };
    };
    return {
        NonEmpty: NonEmpty, 
        singleton: singleton, 
        map: map, 
        drop: drop, 
        toArray: toArray, 
        ":|": $colon$bar, 
        functorNonEmpty: functorNonEmpty, 
        foldableNonEmpty: foldableNonEmpty
    };
})();
var PS = PS || {};
PS.Css_Property = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Profunctor_Strong = PS.Data_Profunctor_Strong;
    var Data_Monoid = PS.Data_Monoid;
    var Css_String = PS.Css_String;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Array_NonEmpty = PS.Data_Array_NonEmpty;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Array = PS.Data_Array;
    var Prefixed = (function () {
        function Prefixed(value0) {
            this.value0 = value0;
        };
        Prefixed.create = function (value0) {
            return new Prefixed(value0);
        };
        return Prefixed;
    })();
    var Plain = (function () {
        function Plain(value0) {
            this.value0 = value0;
        };
        Plain.create = function (value0) {
            return new Plain(value0);
        };
        return Plain;
    })();
    var Value = function (x) {
        return x;
    };
    var Literal = function (x) {
        return x;
    };
    var Key = function (x) {
        return x;
    };
    var Val = function (value) {
        this.value = value;
    };
    var value = function (dict) {
        return dict.value;
    };
    var valValue = new Val(Prelude.id(Prelude.categoryArr));
    var semigroupPrefixed = new Prelude.Semigroup(function (_372) {
        return function (_373) {
            if (_372 instanceof Plain && _373 instanceof Plain) {
                return Plain.create(_372.value0 + _373.value0);
            };
            if (_372 instanceof Plain && _373 instanceof Prefixed) {
                return Prefixed.create(Prelude["<$>"](Data_Array.functorArray)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongArr)(Prelude["<>"](Prelude.semigroupString)(_372.value0)))(_373.value0));
            };
            if (_372 instanceof Prefixed && _373 instanceof Plain) {
                return Prefixed.create(Prelude["<$>"](Data_Array.functorArray)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongArr)(Prelude["<>"](Prelude.semigroupString)(_373.value0)))(_372.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var semigroupValue = new Prelude.Semigroup(function (_374) {
        return function (_375) {
            return Value(Prelude["<>"](semigroupPrefixed)(_374)(_375));
        };
    });
    var quote = function (s) {
        return "\"" + (s + "\"");
    };
    var monoidPrefixed = new Data_Monoid.Monoid(function () {
        return semigroupPrefixed;
    }, new Plain(Data_Monoid.mempty(Data_Monoid.monoidString)));
    var monoidValue = new Data_Monoid.Monoid(function () {
        return semigroupValue;
    }, Data_Monoid.mempty(monoidPrefixed));
    var isStringPrefixed = new Css_String.IsString(Plain.create);
    var isStringValue = new Css_String.IsString(Prelude["<<<"](Prelude.semigroupoidArr)(Value)(Css_String.fromString(isStringPrefixed)));
    var noCommas = function (__dict_Val_342) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(monoidValue)(Css_String.fromString(isStringValue)(" ")))(Prelude["<$>"](Data_Array.functorArray)(value(__dict_Val_342)));
    };
    var valList = function (__dict_Val_341) {
        return new Val(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(monoidValue)(Css_String.fromString(isStringValue)(", ")))(Prelude["<$>"](Data_Array.functorArray)(value(__dict_Val_341))));
    };
    var valNonEmpty = function (__dict_Val_340) {
        return new Val(Prelude["<<<"](Prelude.semigroupoidArr)(value(valList(__dict_Val_340)))(Data_Array_NonEmpty.toArray));
    };
    var valLiteral = new Val(function (_376) {
        return Css_String.fromString(isStringValue)(quote(_376));
    });
    var valNumber = new Val(Prelude["<<<"](Prelude.semigroupoidArr)(Css_String.fromString(isStringValue))(Prelude.show(Prelude.showNumber)));
    var valString = new Val(Css_String.fromString(isStringValue));
    var valTuple = function (__dict_Val_338) {
        return function (__dict_Val_339) {
            return new Val(function (_377) {
                return Prelude["<>"](semigroupValue)(value(__dict_Val_338)(_377.value0))(Prelude["<>"](semigroupValue)(Css_String.fromString(isStringValue)(" "))(value(__dict_Val_339)(_377.value1)));
            });
        };
    };
    var isStringKey = new Css_String.IsString(Prelude["<<<"](Prelude.semigroupoidArr)(Key)(Css_String.fromString(isStringPrefixed)));
    var cast = function (_371) {
        return _371;
    };
    return {
        Literal: Literal, 
        Value: Value, 
        Key: Key, 
        Prefixed: Prefixed, 
        Plain: Plain, 
        Val: Val, 
        noCommas: noCommas, 
        value: value, 
        cast: cast, 
        quote: quote, 
        isStringPrefixed: isStringPrefixed, 
        semigroupPrefixed: semigroupPrefixed, 
        monoidPrefixed: monoidPrefixed, 
        isStringKey: isStringKey, 
        isStringValue: isStringValue, 
        semigroupValue: semigroupValue, 
        monoidValue: monoidValue, 
        valString: valString, 
        valLiteral: valLiteral, 
        valValue: valValue, 
        valTuple: valTuple, 
        valNumber: valNumber, 
        valList: valList, 
        valNonEmpty: valNonEmpty
    };
})();
var PS = PS || {};
PS.Css_Color = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Css_String = PS.Css_String;
    var Data_Foldable = PS.Data_Foldable;
    var $$Math = PS.$$Math;
    var Css_Property = PS.Css_Property;
    var Data_Monoid = PS.Data_Monoid;
    var Rgba = (function () {
        function Rgba(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        Rgba.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new Rgba(value0, value1, value2, value3);
                    };
                };
            };
        };
        return Rgba;
    })();
    var Other = (function () {
        function Other(value0) {
            this.value0 = value0;
        };
        Other.create = function (value0) {
            return new Other(value0);
        };
        return Other;
    })();
    var valColor = new Css_Property.Val(function (_378) {
        if (_378 instanceof Rgba && _378.value3 === 255) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Css_Property.Value)(Css_String.fromString(Css_Property.isStringPrefixed))("rgb(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")([ Prelude.show(Prelude.showNumber)(_378.value0), Prelude.show(Prelude.showNumber)(_378.value1), Prelude.show(Prelude.showNumber)(_378.value2) ]) + ")"));
        };
        if (_378 instanceof Rgba) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Css_Property.Value)(Css_String.fromString(Css_Property.isStringPrefixed))("rgba(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")([ Prelude.show(Prelude.showNumber)(_378.value0), Prelude.show(Prelude.showNumber)(_378.value1), Prelude.show(Prelude.showNumber)(_378.value2), Prelude.show(Prelude.showNumber)(_378.value3) ]) + ")"));
        };
        if (_378 instanceof Other) {
            return _378.value0;
        };
        throw new Error("Failed pattern match");
    });
    var rgb = function (r) {
        return function (g) {
            return function (b) {
                return new Rgba(r, g, b, 255);
            };
        };
    };
    var white = rgb(255)(255)(255);
    return {
        Rgba: Rgba, 
        Other: Other, 
        white: white, 
        rgb: rgb, 
        valColor: valColor
    };
})();
var PS = PS || {};
PS.Css_Size = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Css_String = PS.Css_String;
    var Css_Property = PS.Css_Property;
    var Size = function (x) {
        return x;
    };
    var Angle = function (x) {
        return x;
    };
    var valSize = new Css_Property.Val(function (_379) {
        return _379;
    });
    var valAngle = new Css_Property.Val(function (_380) {
        return _380;
    });
    var sym = function (f) {
        return function (a) {
            return f(a)(a)(a)(a);
        };
    };
    var px = function (i) {
        return Prelude["<>"](Css_Property.semigroupValue)(Css_Property.value(Css_Property.valNumber)(i))(Css_String.fromString(Css_Property.isStringValue)("px"));
    };
    var pct = function (i) {
        return Prelude["<>"](Css_Property.semigroupValue)(Css_Property.value(Css_Property.valNumber)(i))(Css_String.fromString(Css_Property.isStringValue)("%"));
    };
    var nil = Size(Css_String.fromString(Css_Property.isStringValue)("0"));
    var em = function (i) {
        return Prelude["<>"](Css_Property.semigroupValue)(Css_Property.value(Css_Property.valNumber)(i))(Css_String.fromString(Css_Property.isStringValue)("em"));
    };
    var deg = function (i) {
        return Angle(Prelude["<>"](Css_Property.semigroupValue)(Css_Property.value(Css_Property.valNumber)(i))(Css_String.fromString(Css_Property.isStringValue)("deg")));
    };
    return {
        Angle: Angle, 
        Size: Size, 
        deg: deg, 
        sym: sym, 
        pct: pct, 
        em: em, 
        px: px, 
        nil: nil, 
        valSize: valSize, 
        valAngle: valAngle
    };
})();
var PS = PS || {};
PS.Css_Time = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Css_Property = PS.Css_Property;
    var Css_String = PS.Css_String;
    var Time = function (x) {
        return x;
    };
    var valTime = new Css_Property.Val(function (_381) {
        return _381;
    });
    var sec = function (i) {
        return Time(Prelude["<>"](Css_Property.semigroupValue)(Css_Property.value(Css_Property.valNumber)(i))(Css_String.fromString(Css_Property.isStringValue)("s")));
    };
    return {
        Time: Time, 
        sec: sec, 
        valTime: valTime
    };
})();
var PS = PS || {};
PS.Css_Transition = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Css_String = PS.Css_String;
    var Css_Property = PS.Css_Property;
    var TimingFunction = function (x) {
        return x;
    };
    var valTimingFunction = new Css_Property.Val(function (_382) {
        return _382;
    });
    var linear = TimingFunction(Css_String.fromString(Css_Property.isStringValue)("linear"));
    return {
        TimingFunction: TimingFunction, 
        linear: linear, 
        valTimingFunction: valTimingFunction
    };
})();
var PS = PS || {};
PS.Data_Identity = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Identity = function (x) {
        return x;
    };
    var runIdentity = function (_479) {
        return _479;
    };
    var functorIdentity = new Prelude.Functor(function (f) {
        return function (_485) {
            return f(_485);
        };
    });
    var applyIdentity = new Prelude.Apply(function (_486) {
        return function (_487) {
            return _486(_487);
        };
    }, function () {
        return functorIdentity;
    });
    var bindIdentity = new Prelude.Bind(function (m) {
        return function (f) {
            return f(runIdentity(m));
        };
    }, function () {
        return applyIdentity;
    });
    var applicativeIdentity = new Prelude.Applicative(function () {
        return applyIdentity;
    }, Identity);
    var monadIdentity = new Prelude.Monad(function () {
        return applicativeIdentity;
    }, function () {
        return bindIdentity;
    });
    return {
        Identity: Identity, 
        runIdentity: runIdentity, 
        functorIdentity: functorIdentity, 
        applyIdentity: applyIdentity, 
        applicativeIdentity: applicativeIdentity, 
        bindIdentity: bindIdentity, 
        monadIdentity: monadIdentity
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var MonadWriter = function (listen, pass, writer) {
        this.listen = listen;
        this.pass = pass;
        this.writer = writer;
    };
    var writer = function (dict) {
        return dict.writer;
    };
    var tell = function (__dict_Monoid_519) {
        return function (__dict_Monad_520) {
            return function (__dict_MonadWriter_521) {
                return function (w) {
                    return writer(__dict_MonadWriter_521)(new Data_Tuple.Tuple(Prelude.unit, w));
                };
            };
        };
    };
    var monadWriterWriterT = function (__dict_Monoid_522) {
        return function (__dict_Monad_523) {
            return new MonadWriter(function (m) {
                return Control_Monad_Writer_Trans.WriterT(Prelude[">>="](__dict_Monad_523["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_32) {
                    return Prelude["return"](__dict_Monad_523)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_32.value0, _32.value1), _32.value1));
                }));
            }, function (m) {
                return Control_Monad_Writer_Trans.WriterT(Prelude[">>="](__dict_Monad_523["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_33) {
                    return Prelude["return"](__dict_Monad_523)(new Data_Tuple.Tuple(_33.value0.value0, _33.value0.value1(_33.value1)));
                }));
            }, Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Writer_Trans.WriterT)(Prelude["return"](__dict_Monad_523)));
        };
    };
    return {
        MonadWriter: MonadWriter, 
        tell: tell, 
        writer: writer, 
        monadWriterWriterT: monadWriterWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var runWriter = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_Writer_Trans.runWriterT);
    var execWriter = function (m) {
        return Data_Tuple.snd(runWriter(m));
    };
    return {
        execWriter: execWriter, 
        runWriter: runWriter
    };
})();
var PS = PS || {};
PS.Css_Stylesheet = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Writer = PS.Control_Monad_Writer;
    var Control_Monad_Writer_Class = PS.Control_Monad_Writer_Class;
    var Css_Property = PS.Css_Property;
    var Data_Profunctor_Strong = PS.Data_Profunctor_Strong;
    var Css_Selector = PS.Css_Selector;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Array_NonEmpty = PS.Data_Array_NonEmpty;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Data_Identity = PS.Data_Identity;
    var Self = (function () {
        function Self(value0) {
            this.value0 = value0;
        };
        Self.create = function (value0) {
            return new Self(value0);
        };
        return Self;
    })();
    var Root = (function () {
        function Root(value0) {
            this.value0 = value0;
        };
        Root.create = function (value0) {
            return new Root(value0);
        };
        return Root;
    })();
    var Pop = (function () {
        function Pop(value0) {
            this.value0 = value0;
        };
        Pop.create = function (value0) {
            return new Pop(value0);
        };
        return Pop;
    })();
    var Child = (function () {
        function Child(value0) {
            this.value0 = value0;
        };
        Child.create = function (value0) {
            return new Child(value0);
        };
        return Child;
    })();
    var Sub = (function () {
        function Sub(value0) {
            this.value0 = value0;
        };
        Sub.create = function (value0) {
            return new Sub(value0);
        };
        return Sub;
    })();
    var Property = (function () {
        function Property(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Property.create = function (value0) {
            return function (value1) {
                return new Property(value0, value1);
            };
        };
        return Property;
    })();
    var Nested = (function () {
        function Nested(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Nested.create = function (value0) {
            return function (value1) {
                return new Nested(value0, value1);
            };
        };
        return Nested;
    })();
    var Face = (function () {
        function Face(value0) {
            this.value0 = value0;
        };
        Face.create = function (value0) {
            return new Face(value0);
        };
        return Face;
    })();
    var Keyframe = (function () {
        function Keyframe(value0) {
            this.value0 = value0;
        };
        Keyframe.create = function (value0) {
            return new Keyframe(value0);
        };
        return Keyframe;
    })();
    var Keyframes = (function () {
        function Keyframes(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Keyframes.create = function (value0) {
            return function (value1) {
                return new Keyframes(value0, value1);
            };
        };
        return Keyframes;
    })();
    var S = function (x) {
        return x;
    };
    var runS = function (_504) {
        return Control_Monad_Writer.execWriter(_504);
    };
    var rule = Prelude["<<<"](Prelude.semigroupoidArr)(S)(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Writer_Class.tell(Data_Monoid.monoidArray)(Control_Monad_Writer_Trans.monadWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))(Control_Monad_Writer_Class.monadWriterWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity)))(function (_0) {
        return Prelude[":"](_0)([  ]);
    }));
    var $qmark = function (sel) {
        return function (rs) {
            return rule(new Nested(new Sub(sel), runS(rs)));
        };
    };
    var keyframes = function (n) {
        return function (xs) {
            return rule(new Keyframe(new Keyframes(n, Prelude["<$>"](Data_Array_NonEmpty.functorNonEmpty)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongArr)(runS))(xs))));
        };
    };
    var key = function (__dict_Val_554) {
        return function (k) {
            return function (v) {
                return rule(new Property(Css_Property.cast(k), Css_Property.value(__dict_Val_554)(v)));
            };
        };
    };
    var functorStyleM = new Prelude.Functor(function (f) {
        return function (_505) {
            return S(Prelude["<$>"](Control_Monad_Writer_Trans.functorWriterT(Data_Identity.functorIdentity))(f)(_505));
        };
    });
    var fontFace = Prelude["<<<"](Prelude.semigroupoidArr)(rule)(Prelude["<<<"](Prelude.semigroupoidArr)(Face.create)(runS));
    var applyStyleM = new Prelude.Apply(function (_506) {
        return function (_507) {
            return S(Prelude["<*>"](Control_Monad_Writer_Trans.applyWriterT(Data_Monoid.monoidArray)(Data_Identity.applyIdentity))(_506)(_507));
        };
    }, function () {
        return functorStyleM;
    });
    var bindStyleM = new Prelude.Bind(function (_508) {
        return function (f) {
            return S(Prelude[">>="](Control_Monad_Writer_Trans.bindWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))(_508)(Prelude["<<<"](Prelude.semigroupoidArr)(function (_503) {
                return _503;
            })(f)));
        };
    }, function () {
        return applyStyleM;
    });
    return {
        S: S, 
        Property: Property, 
        Nested: Nested, 
        Face: Face, 
        Keyframe: Keyframe, 
        Keyframes: Keyframes, 
        Self: Self, 
        Root: Root, 
        Pop: Pop, 
        Child: Child, 
        Sub: Sub, 
        fontFace: fontFace, 
        keyframes: keyframes, 
        "?": $qmark, 
        key: key, 
        rule: rule, 
        runS: runS, 
        functorStyleM: functorStyleM, 
        applyStyleM: applyStyleM, 
        bindStyleM: bindStyleM
    };
})();
var PS = PS || {};
PS.Css_Animation = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Css_String = PS.Css_String;
    var Css_Property = PS.Css_Property;
    var Css_Stylesheet = PS.Css_Stylesheet;
    var Data_Tuple_Nested = PS.Data_Tuple_Nested;
    var Css_Time = PS.Css_Time;
    var Css_Transition = PS.Css_Transition;
    var IterationCount = function (x) {
        return x;
    };
    var FillMode = function (x) {
        return x;
    };
    var AnimationName = function (x) {
        return x;
    };
    var AnimationDirection = function (x) {
        return x;
    };
    var valIterationCount = new Css_Property.Val(function (_510) {
        return _510;
    });
    var valFillMode = new Css_Property.Val(function (_511) {
        return _511;
    });
    var valAnimationName = new Css_Property.Val(function (_512) {
        return _512;
    });
    var valAnimationDirection = new Css_Property.Val(function (_509) {
        return _509;
    });
    var normalAnimationDirection = AnimationDirection(Css_String.fromString(Css_Property.isStringValue)("normal"));
    var isStringAnimationName = new Css_String.IsString(Prelude["<<<"](Prelude.semigroupoidArr)(AnimationName)(Css_String.fromString(Css_Property.isStringValue)));
    var infinite = IterationCount(Css_String.fromString(Css_Property.isStringValue)("infinite"));
    var forwards = FillMode(Css_String.fromString(Css_Property.isStringValue)("forwards"));
    var animation = function (p) {
        return function (de) {
            return function (f) {
                return function (du) {
                    return function (i) {
                        return function (di) {
                            return function (fm) {
                                return Css_Stylesheet.key(Css_Property.valTuple(Css_Property.valTuple(Css_Property.valTuple(Css_Property.valTuple(Css_Property.valTuple(Css_Property.valTuple(valAnimationName)(Css_Time.valTime))(Css_Transition.valTimingFunction))(Css_Time.valTime))(valIterationCount))(valAnimationDirection))(valFillMode))(Css_String.fromString(Css_Property.isStringKey)("-webkit-animation"))(Data_Tuple_Nested.tuple7(p)(de)(f)(du)(i)(di)(fm));
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        AnimationName: AnimationName, 
        FillMode: FillMode, 
        IterationCount: IterationCount, 
        AnimationDirection: AnimationDirection, 
        animation: animation, 
        forwards: forwards, 
        infinite: infinite, 
        normalAnimationDirection: normalAnimationDirection, 
        valAnimationDirection: valAnimationDirection, 
        valIterationCount: valIterationCount, 
        valFillMode: valFillMode, 
        valAnimationName: valAnimationName, 
        isStringAnimationName: isStringAnimationName
    };
})();
var PS = PS || {};
PS.Css_Background = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Css_Stylesheet = PS.Css_Stylesheet;
    var Css_String = PS.Css_String;
    var Css_Color = PS.Css_Color;
    var Css_Property = PS.Css_Property;
    var BackgroundImage = function (x) {
        return x;
    };
    var valBackroundImage = new Css_Property.Val(function (_513) {
        return _513;
    });
    var backgroundImage = Css_Stylesheet.key(valBackroundImage)(Css_String.fromString(Css_Property.isStringKey)("background-image"));
    return {
        BackgroundImage: BackgroundImage, 
        backgroundImage: backgroundImage, 
        valBackroundImage: valBackroundImage
    };
})();
var PS = PS || {};
PS.Css_Gradient = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Css_Property = PS.Css_Property;
    var Css_String = PS.Css_String;
    var Data_Foldable = PS.Data_Foldable;
    var Css_Background = PS.Css_Background;
    var Css_Color = PS.Css_Color;
    var Css_Size = PS.Css_Size;
    var Data_Array = PS.Data_Array;
    var ColorPoint = (function () {
        function ColorPoint(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        ColorPoint.create = function (value0) {
            return function (value1) {
                return new ColorPoint(value0, value1);
            };
        };
        return ColorPoint;
    })();
    var linearGradient = function (a) {
        return function (b) {
            return function (cs) {
                return function (e) {
                    var colorPoint = function (_514) {
                        return Prelude["<>"](Css_Property.semigroupValue)(Css_Property.value(Css_Color.valColor)(_514.value0))(Prelude["<>"](Css_Property.semigroupValue)(Css_String.fromString(Css_Property.isStringValue)(" "))(Css_Property.value(Css_Size.valSize)(_514.value1)));
                    };
                    var points = Data_Foldable.intercalate(Data_Foldable.foldableArray)(Css_Property.monoidValue)(Css_String.fromString(Css_Property.isStringValue)(", "))(Prelude["<>"](Data_Array.semigroupArray)([ colorPoint(b) ])(Prelude["<>"](Data_Array.semigroupArray)(Prelude["<$>"](Data_Array.functorArray)(colorPoint)(cs))([ colorPoint(e) ])));
                    return Css_Background.BackgroundImage(Prelude["<>"](Css_Property.semigroupValue)(Css_String.fromString(Css_Property.isStringValue)("linear-gradient("))(Prelude["<>"](Css_Property.semigroupValue)(Css_Property.value(Css_Size.valAngle)(a))(Prelude["<>"](Css_Property.semigroupValue)(Css_String.fromString(Css_Property.isStringValue)(", "))(Prelude["<>"](Css_Property.semigroupValue)(points)(Css_String.fromString(Css_Property.isStringValue)(")"))))));
                };
            };
        };
    };
    return {
        ColorPoint: ColorPoint, 
        linearGradient: linearGradient
    };
})();
var PS = PS || {};
PS.Css_Border = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Css_String = PS.Css_String;
    var Css_Stylesheet = PS.Css_Stylesheet;
    var Data_Tuple_Nested = PS.Data_Tuple_Nested;
    var Css_Color = PS.Css_Color;
    var Css_Property = PS.Css_Property;
    var Css_Size = PS.Css_Size;
    var Stroke = function (x) {
        return x;
    };
    var valStroke = new Css_Property.Val(function (_515) {
        return _515;
    });
    var solid = Stroke(Css_String.fromString(Css_Property.isStringValue)("solid"));
    var borderRadius = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return Css_Stylesheet.key(Css_Property.valTuple(Css_Property.valTuple(Css_Property.valTuple(Css_Size.valSize)(Css_Size.valSize))(Css_Size.valSize))(Css_Size.valSize))(Css_String.fromString(Css_Property.isStringKey)("border-radius"))(Data_Tuple_Nested.tuple4(a)(b)(c)(d));
                };
            };
        };
    };
    var border = function (a) {
        return function (b) {
            return function (c) {
                return Css_Stylesheet.key(Css_Property.valTuple(Css_Property.valTuple(valStroke)(Css_Size.valSize))(Css_Color.valColor))(Css_String.fromString(Css_Property.isStringKey)("border"))(Data_Tuple_Nested.tuple3(a)(b)(c));
            };
        };
    };
    return {
        Stroke: Stroke, 
        borderRadius: borderRadius, 
        border: border, 
        solid: solid, 
        valStroke: valStroke
    };
})();
var PS = PS || {};
PS.Css_Display = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Css_Stylesheet = PS.Css_Stylesheet;
    var Css_String = PS.Css_String;
    var Css_Property = PS.Css_Property;
    var Position = function (x) {
        return x;
    };
    var Display = function (x) {
        return x;
    };
    var valPosition = new Css_Property.Val(function (_516) {
        return _516;
    });
    var valDisplay = new Css_Property.Val(function (_517) {
        return _517;
    });
    var position = Css_Stylesheet.key(valPosition)(Css_String.fromString(Css_Property.isStringKey)("position"));
    var display = Css_Stylesheet.key(valDisplay)(Css_String.fromString(Css_Property.isStringKey)("display"));
    var block = Display(Css_String.fromString(Css_Property.isStringValue)("block"));
    var absolute = Position(Css_String.fromString(Css_Property.isStringValue)("absolute"));
    return {
        Display: Display, 
        Position: Position, 
        display: display, 
        block: block, 
        absolute: absolute, 
        position: position, 
        valPosition: valPosition, 
        valDisplay: valDisplay
    };
})();
var PS = PS || {};
PS.Css_Font = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Css_Stylesheet = PS.Css_Stylesheet;
    var Css_String = PS.Css_String;
    var Css_Property = PS.Css_Property;
    var Data_Array_NonEmpty = PS.Data_Array_NonEmpty;
    var Css_Color = PS.Css_Color;
    var Css_Size = PS.Css_Size;
    var Data_Array = PS.Data_Array;
    var GenericFontFamily = function (x) {
        return x;
    };
    var FontWeight = function (x) {
        return x;
    };
    var weight = function (i) {
        return FontWeight(Css_Property.value(Css_Property.valNumber)(i));
    };
    var valGenericFontFamily = new Css_Property.Val(function (_518) {
        return _518;
    });
    var valFontWeight = new Css_Property.Val(function (_519) {
        return _519;
    });
    var sansSerif = GenericFontFamily(Css_String.fromString(Css_Property.isStringValue)("sans-serif"));
    var fontWeight = Css_Stylesheet.key(valFontWeight)(Css_String.fromString(Css_Property.isStringKey)("font-weight"));
    var fontSize = Css_Stylesheet.key(Css_Size.valSize)(Css_String.fromString(Css_Property.isStringKey)("font-size"));
    var fontFamily = function (a) {
        return function (b) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Css_Stylesheet.key(Css_Property.valValue)(Css_String.fromString(Css_Property.isStringKey)("font-family")))(Css_Property.value(Css_Property.valList(Css_Property.valValue)))(Prelude["<>"](Data_Array.semigroupArray)(Prelude["<$>"](Data_Array.functorArray)(Prelude["<<<"](Prelude.semigroupoidArr)(Css_Property.value(Css_Property.valString))(Css_Property.quote))(a))(Data_Array_NonEmpty.toArray(Prelude["<$>"](Data_Array_NonEmpty.functorNonEmpty)(Css_Property.value(valGenericFontFamily))(b))));
        };
    };
    var color = Css_Stylesheet.key(Css_Color.valColor)(Css_String.fromString(Css_Property.isStringKey)("color"));
    return {
        FontWeight: FontWeight, 
        GenericFontFamily: GenericFontFamily, 
        fontWeight: fontWeight, 
        weight: weight, 
        fontSize: fontSize, 
        fontFamily: fontFamily, 
        sansSerif: sansSerif, 
        color: color, 
        valGenericFontFamily: valGenericFontFamily, 
        valFontWeight: valFontWeight
    };
})();
var PS = PS || {};
PS.Css_FontFace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Css_Stylesheet = PS.Css_Stylesheet;
    var Css_String = PS.Css_String;
    var Css_Property = PS.Css_Property;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array_NonEmpty = PS.Data_Array_NonEmpty;
    var WOFF = (function () {
        function WOFF() {

        };
        WOFF.value = new WOFF();
        return WOFF;
    })();
    var WOFF2 = (function () {
        function WOFF2() {

        };
        WOFF2.value = new WOFF2();
        return WOFF2;
    })();
    var TrueType = (function () {
        function TrueType() {

        };
        TrueType.value = new TrueType();
        return TrueType;
    })();
    var OpenType = (function () {
        function OpenType() {

        };
        OpenType.value = new OpenType();
        return OpenType;
    })();
    var EmbeddedOpenType = (function () {
        function EmbeddedOpenType() {

        };
        EmbeddedOpenType.value = new EmbeddedOpenType();
        return EmbeddedOpenType;
    })();
    var SVG = (function () {
        function SVG() {

        };
        SVG.value = new SVG();
        return SVG;
    })();
    var FontFaceSrcUrl = (function () {
        function FontFaceSrcUrl(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        FontFaceSrcUrl.create = function (value0) {
            return function (value1) {
                return new FontFaceSrcUrl(value0, value1);
            };
        };
        return FontFaceSrcUrl;
    })();
    var FontFaceSrcLocal = (function () {
        function FontFaceSrcLocal(value0) {
            this.value0 = value0;
        };
        FontFaceSrcLocal.create = function (value0) {
            return new FontFaceSrcLocal(value0);
        };
        return FontFaceSrcLocal;
    })();
    var formatName = function (_520) {
        if (_520 instanceof WOFF) {
            return "woff";
        };
        if (_520 instanceof WOFF2) {
            return "woff2";
        };
        if (_520 instanceof TrueType) {
            return "truetype";
        };
        if (_520 instanceof OpenType) {
            return "opentype";
        };
        if (_520 instanceof EmbeddedOpenType) {
            return "embedded-opentype";
        };
        if (_520 instanceof SVG) {
            return "svg";
        };
        throw new Error("Failed pattern match");
    };
    var valFontFaceSrc = new Css_Property.Val(function (_521) {
        if (_521 instanceof FontFaceSrcUrl) {
            return Css_String.fromString(Css_Property.isStringValue)("url(" + (Css_Property.quote(_521.value0) + (")" + Data_Maybe.maybe("")(function (f$prime) {
                return " format(" + (formatName(f$prime) + ")");
            })(_521.value1))));
        };
        if (_521 instanceof FontFaceSrcLocal) {
            return Css_String.fromString(Css_Property.isStringValue)("local(" + (Css_Property.quote(_521.value0) + ")"));
        };
        throw new Error("Failed pattern match");
    });
    var fontFaceSrc = Css_Stylesheet.key(Css_Property.valNonEmpty(valFontFaceSrc))(Css_String.fromString(Css_Property.isStringKey)("src"));
    var fontFaceFamily = Prelude["<<<"](Prelude.semigroupoidArr)(Css_Stylesheet.key(Css_Property.valLiteral)(Css_String.fromString(Css_Property.isStringKey)("font-family")))(Css_Property.Literal);
    return {
        FontFaceSrcUrl: FontFaceSrcUrl, 
        FontFaceSrcLocal: FontFaceSrcLocal, 
        WOFF: WOFF, 
        WOFF2: WOFF2, 
        TrueType: TrueType, 
        OpenType: OpenType, 
        EmbeddedOpenType: EmbeddedOpenType, 
        SVG: SVG, 
        fontFaceSrc: fontFaceSrc, 
        formatName: formatName, 
        fontFaceFamily: fontFaceFamily, 
        valFontFaceSrc: valFontFaceSrc
    };
})();
var PS = PS || {};
PS.Css_Geometry = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Css_Stylesheet = PS.Css_Stylesheet;
    var Css_String = PS.Css_String;
    var Data_Tuple_Nested = PS.Data_Tuple_Nested;
    var Css_Size = PS.Css_Size;
    var Css_Property = PS.Css_Property;
    var top = Css_Stylesheet.key(Css_Size.valSize)(Css_String.fromString(Css_Property.isStringKey)("top"));
    var padding = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return Css_Stylesheet.key(Css_Property.valTuple(Css_Property.valTuple(Css_Property.valTuple(Css_Size.valSize)(Css_Size.valSize))(Css_Size.valSize))(Css_Size.valSize))(Css_String.fromString(Css_Property.isStringKey)("padding"))(Data_Tuple_Nested.tuple4(a)(b)(c)(d));
                };
            };
        };
    };
    var marginTop = Css_Stylesheet.key(Css_Size.valSize)(Css_String.fromString(Css_Property.isStringKey)("margin-top"));
    var marginLeft = Css_Stylesheet.key(Css_Size.valSize)(Css_String.fromString(Css_Property.isStringKey)("margin-left"));
    var margin = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return Css_Stylesheet.key(Css_Property.valTuple(Css_Property.valTuple(Css_Property.valTuple(Css_Size.valSize)(Css_Size.valSize))(Css_Size.valSize))(Css_Size.valSize))(Css_String.fromString(Css_Property.isStringKey)("margin"))(Data_Tuple_Nested.tuple4(a)(b)(c)(d));
                };
            };
        };
    };
    var left = Css_Stylesheet.key(Css_Size.valSize)(Css_String.fromString(Css_Property.isStringKey)("left"));
    var height = Css_Stylesheet.key(Css_Size.valSize)(Css_String.fromString(Css_Property.isStringKey)("height"));
    return {
        marginLeft: marginLeft, 
        marginTop: marginTop, 
        margin: margin, 
        padding: padding, 
        left: left, 
        top: top, 
        height: height
    };
})();
var PS = PS || {};
PS.Css_Text = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Css_String = PS.Css_String;
    var Css_Stylesheet = PS.Css_Stylesheet;
    var Css_Property = PS.Css_Property;
    var TextDecoration = function (x) {
        return x;
    };
    var valTextDecoration = new Css_Property.Val(function (_522) {
        return _522;
    });
    var textDecoration = Css_Stylesheet.key(valTextDecoration)(Css_String.fromString(Css_Property.isStringKey)("text-decoration"));
    var noneTextDecoration = TextDecoration(Css_String.fromString(Css_Property.isStringValue)("none"));
    return {
        TextDecoration: TextDecoration, 
        textDecoration: textDecoration, 
        noneTextDecoration: noneTextDecoration, 
        valTextDecoration: valTextDecoration
    };
})();
var PS = PS || {};
PS.Css_Transform = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Css_Stylesheet = PS.Css_Stylesheet;
    var Css_String = PS.Css_String;
    var Css_Property = PS.Css_Property;
    var Css_Size = PS.Css_Size;
    var Transformation = function (x) {
        return x;
    };
    var valTransformation = new Css_Property.Val(function (_523) {
        return _523;
    });
    var translate = function (x) {
        return function (y) {
            return Transformation(Prelude["<>"](Css_Property.semigroupValue)(Css_String.fromString(Css_Property.isStringValue)("translate("))(Prelude["<>"](Css_Property.semigroupValue)(Css_Property.value(Css_Property.valList(Css_Size.valSize))([ x, y ]))(Css_String.fromString(Css_Property.isStringValue)(")"))));
        };
    };
    var transforms = Prelude["<<<"](Prelude.semigroupoidArr)(Css_Stylesheet.key(Css_Property.valValue)(Css_String.fromString(Css_Property.isStringKey)("transform")))(Css_Property.noCommas(valTransformation));
    var rotate = function (a) {
        return Transformation(Prelude["<>"](Css_Property.semigroupValue)(Css_String.fromString(Css_Property.isStringValue)("rotate("))(Prelude["<>"](Css_Property.semigroupValue)(Css_Property.value(Css_Size.valAngle)(a))(Css_String.fromString(Css_Property.isStringValue)(")"))));
    };
    return {
        Transformation: Transformation, 
        rotate: rotate, 
        translate: translate, 
        transforms: transforms, 
        valTransformation: valTransformation
    };
})();
var PS = PS || {};
PS.Data_These = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Tuple = PS.Data_Tuple;
    var This = (function () {
        function This(value0) {
            this.value0 = value0;
        };
        This.create = function (value0) {
            return new This(value0);
        };
        return This;
    })();
    var That = (function () {
        function That(value0) {
            this.value0 = value0;
        };
        That.create = function (value0) {
            return new That(value0);
        };
        return That;
    })();
    var Both = (function () {
        function Both(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Both.create = function (value0) {
            return function (value1) {
                return new Both(value0, value1);
            };
        };
        return Both;
    })();
    var semigroupThese = function (__dict_Semigroup_557) {
        return function (__dict_Semigroup_558) {
            return new Prelude.Semigroup(function (_528) {
                return function (_529) {
                    if (_528 instanceof This && _529 instanceof This) {
                        return new This(Prelude["<>"](__dict_Semigroup_557)(_528.value0)(_529.value0));
                    };
                    if (_528 instanceof This && _529 instanceof That) {
                        return new Both(_528.value0, _529.value0);
                    };
                    if (_528 instanceof This && _529 instanceof Both) {
                        return new Both(Prelude["<>"](__dict_Semigroup_557)(_528.value0)(_529.value0), _529.value1);
                    };
                    if (_528 instanceof That && _529 instanceof This) {
                        return new Both(_529.value0, _528.value0);
                    };
                    if (_528 instanceof That && _529 instanceof That) {
                        return new That(Prelude["<>"](__dict_Semigroup_558)(_528.value0)(_529.value0));
                    };
                    if (_528 instanceof That && _529 instanceof Both) {
                        return new Both(_529.value0, Prelude["<>"](__dict_Semigroup_558)(_528.value0)(_529.value1));
                    };
                    if (_528 instanceof Both && _529 instanceof This) {
                        return new Both(Prelude["<>"](__dict_Semigroup_557)(_528.value0)(_529.value0), _528.value1);
                    };
                    if (_528 instanceof Both && _529 instanceof That) {
                        return new Both(_528.value0, Prelude["<>"](__dict_Semigroup_558)(_528.value1)(_529.value0));
                    };
                    if (_528 instanceof Both && _529 instanceof Both) {
                        return new Both(Prelude["<>"](__dict_Semigroup_557)(_528.value0)(_529.value0), Prelude["<>"](__dict_Semigroup_558)(_528.value1)(_529.value1));
                    };
                    throw new Error("Failed pattern match");
                };
            });
        };
    };
    return {
        This: This, 
        That: That, 
        Both: Both, 
        semigroupThese: semigroupThese
    };
})();
var PS = PS || {};
PS.Css_Render = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Css_Stylesheet = PS.Css_Stylesheet;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    var Data_Array_NonEmpty = PS.Data_Array_NonEmpty;
    var Data_Either = PS.Data_Either;
    var Css_Selector = PS.Css_Selector;
    var Css_Property = PS.Css_Property;
    var Css_String = PS.Css_String;
    var Data_These = PS.Data_These;
    var Sheet = function (x) {
        return x;
    };
    var Inline = function (x) {
        return x;
    };
    var sepWith = function (s) {
        return function (a) {
            return function (b) {
                return a + (s + b);
            };
        };
    };
    var semigroupInline = new Prelude.Semigroup(function (_557) {
        return function (_558) {
            return _557 + _558;
        };
    });
    var semigroupFile = new Prelude.Semigroup(function (_559) {
        return function (_560) {
            return _559 + _560;
        };
    });
    var properties = function (xs) {
        var sheetRules = Data_Either.either(function (_541) {
            return Data_Monoid.mempty(Data_Monoid.monoidString);
        })(function (_542) {
            return Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidString)([ _542.value0, ": ", _542.value1 ]);
        });
        return Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("; ")(Prelude["<$>"](Data_Array.functorArray)(sheetRules)(xs));
    };
    var predicate = function (_555) {
        if (_555 instanceof Css_Selector.Id) {
            return "#" + _555.value0;
        };
        if (_555 instanceof Css_Selector.Class) {
            return "." + _555.value0;
        };
        if (_555 instanceof Css_Selector.Attr) {
            return "[" + (_555.value0 + "]");
        };
        if (_555 instanceof Css_Selector.AttrVal) {
            return "[" + (_555.value0 + ("='" + (_555.value1 + "']")));
        };
        if (_555 instanceof Css_Selector.AttrBegins) {
            return "[" + (_555.value0 + ("^='" + (_555.value1 + "']")));
        };
        if (_555 instanceof Css_Selector.AttrEnds) {
            return "[" + (_555.value0 + ("$='" + (_555.value1 + "']")));
        };
        if (_555 instanceof Css_Selector.AttrContains) {
            return "[" + (_555.value0 + ("*='" + (_555.value1 + "']")));
        };
        if (_555 instanceof Css_Selector.AttrSpace) {
            return "[" + (_555.value0 + ("~='" + (_555.value1 + "']")));
        };
        if (_555 instanceof Css_Selector.AttrHyph) {
            return "[" + (_555.value0 + ("|='" + (_555.value1 + "']")));
        };
        if (_555 instanceof Css_Selector.Pseudo) {
            return ":" + _555.value0;
        };
        if (_555 instanceof Css_Selector.PseudoFunc) {
            return ":" + (_555.value0 + ("(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(",")(_555.value1) + ")")));
        };
        throw new Error("Failed pattern match");
    };
    var selector$prime$prime = function (_549) {
        return function (_550) {
            if (_549.length === 0 && _550 instanceof Css_Selector.Star) {
                return [ "*" ];
            };
            if (_549.length >= 1) {
                var _788 = _549.slice(1);
                if (_550 instanceof Css_Selector.Star) {
                    return [ "" ];
                };
            };
            if (_550 instanceof Css_Selector.Elem) {
                return [ _550.value0 ];
            };
            if (_550 instanceof Css_Selector.PathChild) {
                return Prelude["<*>"](Data_Array.applyArray)(Prelude["<$>"](Data_Array.functorArray)(sepWith(" > "))(selector$prime(_550.value0)))(selector$prime(_550.value1));
            };
            if (_550 instanceof Css_Selector.Deep) {
                return Prelude["<*>"](Data_Array.applyArray)(Prelude["<$>"](Data_Array.functorArray)(sepWith(" "))(selector$prime(_550.value0)))(selector$prime(_550.value1));
            };
            if (_550 instanceof Css_Selector.Adjacent) {
                return Prelude["<*>"](Data_Array.applyArray)(Prelude["<$>"](Data_Array.functorArray)(sepWith(" + "))(selector$prime(_550.value0)))(selector$prime(_550.value1));
            };
            if (_550 instanceof Css_Selector.Combined) {
                return Prelude["<>"](Data_Array.semigroupArray)(selector$prime(_550.value0))(selector$prime(_550.value1));
            };
            throw new Error("Failed pattern match");
        };
    };
    var selector$prime = function (_548) {
        return Prelude["<$>"](Data_Array.functorArray)(function (_5) {
            return _5 + Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(predicate)(Data_Array.sort(Css_Selector.ordPredicate)(_548.value0));
        })(selector$prime$prime(_548.value0)(_548.value1));
    };
    var selector = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", "))(selector$prime);
    var nel = function (_556) {
        if (_556.length === 0) {
            return Data_Maybe.Nothing.value;
        };
        if (_556.length >= 1) {
            var _803 = _556.slice(1);
            return Data_Maybe.Just.create(Data_Array_NonEmpty[":|"](_556[0])(_803));
        };
        throw new Error("Failed pattern match");
    };
    var merger = function (_554) {
        if (_554.value0 instanceof Css_Stylesheet.Child) {
            return Data_Maybe.maybe(_554.value0.value0)(function (xs$prime) {
                return Css_Selector["|>"](merger(xs$prime))(_554.value0.value0);
            })(nel(_554.value1));
        };
        if (_554.value0 instanceof Css_Stylesheet.Sub) {
            return Data_Maybe.maybe(_554.value0.value0)(function (xs$prime) {
                return Css_Selector["**"](merger(xs$prime))(_554.value0.value0);
            })(nel(_554.value1));
        };
        if (_554.value0 instanceof Css_Stylesheet.Root) {
            return Data_Maybe.maybe(_554.value0.value0)(function (xs$prime) {
                return Css_Selector["**"](_554.value0.value0)(merger(xs$prime));
            })(nel(_554.value1));
        };
        if (_554.value0 instanceof Css_Stylesheet.Pop) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.maybe(Css_Selector.element("TODO"))(merger))(Prelude["<<<"](Prelude.semigroupoidArr)(nel)(Data_Array_NonEmpty.drop(_554.value0.value0)))(Data_Array_NonEmpty[":|"](_554.value0)(_554.value1));
        };
        if (_554.value0 instanceof Css_Stylesheet.Self) {
            return Data_Maybe.maybe(Css_Selector["with"](Css_Selector.star)(_554.value0.value0))(function (xs$prime) {
                return Css_Selector["with"](merger(xs$prime))(_554.value0.value0);
            })(nel(_554.value1));
        };
        throw new Error("Failed pattern match");
    };
    var maybeThisSide = function (_545) {
        if (_545 instanceof Data_These.Both) {
            return new Data_Maybe.Just(_545.value0);
        };
        if (_545 instanceof Data_These.That) {
            return Data_Maybe.Nothing.value;
        };
        if (_545 instanceof Data_These.This) {
            return new Data_Maybe.Just(_545.value0);
        };
        throw new Error("Failed pattern match");
    };
    var maybeThatSide = function (_546) {
        if (_546 instanceof Data_These.Both) {
            return new Data_Maybe.Just(_546.value1);
        };
        if (_546 instanceof Data_These.That) {
            return new Data_Maybe.Just(_546.value0);
        };
        if (_546 instanceof Data_These.This) {
            return Data_Maybe.Nothing.value;
        };
        throw new Error("Failed pattern match");
    };
    var getSheet = function (_544) {
        return _544;
    };
    var renderedSheet = function (_4) {
        return Prelude[">>="](Data_Maybe.bindMaybe)(_4)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](Data_Maybe.functorMaybe)(getSheet))(maybeThatSide));
    };
    var getInline = function (_543) {
        return _543;
    };
    var renderedInline = function (_3) {
        return Prelude[">>="](Data_Maybe.bindMaybe)(_3)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](Data_Maybe.functorMaybe)(getInline))(maybeThisSide));
    };
    var collect$prime = function (_552) {
        return function (_553) {
            if (_552 instanceof Css_Property.Plain && _553 instanceof Css_Property.Plain) {
                return [ new Data_Either.Right(new Data_Tuple.Tuple(_552.value0, _553.value0)) ];
            };
            if (_552 instanceof Css_Property.Prefixed && _553 instanceof Css_Property.Plain) {
                return Prelude["<$>"](Data_Array.functorArray)(function (_538) {
                    return Data_Either.Right.create(new Data_Tuple.Tuple(_538.value0 + _538.value1, _553.value0));
                })(_552.value0);
            };
            if (_552 instanceof Css_Property.Plain && _553 instanceof Css_Property.Prefixed) {
                return Prelude["<$>"](Data_Array.functorArray)(function (_539) {
                    return Data_Either.Right.create(new Data_Tuple.Tuple(_552.value0, _539.value0 + _539.value1));
                })(_553.value0);
            };
            if (_552 instanceof Css_Property.Prefixed && _553 instanceof Css_Property.Prefixed) {
                return Prelude["<$>"](Data_Array.functorArray)(function (_540) {
                    return Data_Maybe.maybe(new Data_Either.Left(_540.value0 + _540.value1))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Right.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Tuple.Tuple.create(_540.value0 + _540.value1))(Prelude["<>"](Prelude.semigroupString)(_540.value0))))(Data_Foldable.lookup(Prelude.eqString)(Data_Foldable.foldableArray)(_540.value0)(_553.value0));
                })(_552.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
    var collect = function (_551) {
        return collect$prime(_551.value0)(_551.value1);
    };
    var rule$prime = function (sel) {
        return function (props) {
            var p = Prelude[">>="](Data_Array.bindArray)(props)(collect);
            var q = Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_These.This.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Inline)(Prelude["<<<"](Prelude.semigroupoidArr)(properties)(Data_Array_NonEmpty.toArray))))(nel(p));
            var o = function (sel$prime) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_These.That.create)(Sheet))(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")([ selector(merger(sel$prime)), "{", properties(p), "}" ]));
            };
            return Data_Maybe.maybe(q)(o)(nel(sel));
        };
    };
    var rules = function (sel) {
        return function (rs) {
            var property = function (_561) {
                if (_561 instanceof Css_Stylesheet.Property) {
                    return new Data_Maybe.Just(new Data_Tuple.Tuple(_561.value0, _561.value1));
                };
                return Data_Maybe.Nothing.value;
            };
            var topRules = rule$prime(sel)(Data_Array.mapMaybe(property)(rs));
            var nestedRules = function (a) {
                return rules(Prelude[":"](a)(sel));
            };
            var nested = function (_562) {
                if (_562 instanceof Css_Stylesheet.Nested) {
                    return new Data_Maybe.Just(new Data_Tuple.Tuple(_562.value0, _562.value1));
                };
                return Data_Maybe.Nothing.value;
            };
            var nestedSheets = Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(new Data_Maybe.Just(new Data_These.That(" ")))(Prelude["<$>"](Data_Array.functorArray)(Data_Tuple.uncurry(nestedRules))(Data_Array.mapMaybe(nested)(rs)));
            var kframes = function (_563) {
                if (_563 instanceof Css_Stylesheet.Keyframe) {
                    return new Data_Maybe.Just(_563.value0);
                };
                return Data_Maybe.Nothing.value;
            };
            var keyframeRules = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(kframe)(Data_Array.mapMaybe(kframes)(rs));
            var faces = function (_564) {
                if (_564 instanceof Css_Stylesheet.Face) {
                    return new Data_Maybe.Just(_564.value0);
                };
                return Data_Maybe.Nothing.value;
            };
            var faceRules = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(face)(Data_Array.mapMaybe(faces)(rs));
            return Prelude["<>"](Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(topRules)(Prelude["<>"](Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(nestedSheets)(Prelude["<>"](Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(keyframeRules)(faceRules)));
        };
    };
    var kframe = function (_547) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_These.That.create)(Sheet))(" @-webkit-keyframes " + (_547.value0 + (" { " + (Data_Foldable.intercalate(Data_Array_NonEmpty.foldableNonEmpty)(Data_Monoid.monoidString)(" ")(Prelude["<$>"](Data_Array_NonEmpty.functorNonEmpty)(Data_Tuple.uncurry(frame))(_547.value1)) + " }"))));
    };
    var frame = function (p) {
        return function (rs) {
            var x = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.fromMaybe(""))(renderedInline)(rules([  ])(rs));
            return Prelude.show(Prelude.showNumber)(p) + ("% " + ("{ " + (x + " }")));
        };
    };
    var face = function (rs) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_These.That.create)(Sheet))("@font-face { " + (Data_Maybe.fromMaybe("")(renderedInline(rules([  ])(rs))) + " }"));
    };
    var render = Prelude["<<<"](Prelude.semigroupoidArr)(rules([  ]))(Css_Stylesheet.runS);
    return {
        Sheet: Sheet, 
        Inline: Inline, 
        nel: nel, 
        predicate: predicate, 
        merger: merger, 
        properties: properties, 
        "collect'": collect$prime, 
        collect: collect, 
        sepWith: sepWith, 
        "selector''": selector$prime$prime, 
        "selector'": selector$prime, 
        selector: selector, 
        "rule'": rule$prime, 
        rules: rules, 
        face: face, 
        frame: frame, 
        kframe: kframe, 
        render: render, 
        renderedSheet: renderedSheet, 
        renderedInline: renderedInline, 
        maybeThatSide: maybeThatSide, 
        maybeThisSide: maybeThisSide, 
        getSheet: getSheet, 
        getInline: getInline, 
        semigroupInline: semigroupInline, 
        semigroupFile: semigroupFile
    };
})();
var PS = PS || {};
PS.Site = (function () {
    "use strict";
    var Css_Color = PS.Css_Color;
    var Prelude = PS.Prelude;
    var Css_Background = PS.Css_Background;
    var Css_Gradient = PS.Css_Gradient;
    var Css_Size = PS.Css_Size;
    var Css_Transform = PS.Css_Transform;
    var Css_Stylesheet = PS.Css_Stylesheet;
    var Css_FontFace = PS.Css_FontFace;
    var Css_String = PS.Css_String;
    var Css_Font = PS.Css_Font;
    var Data_Array_NonEmpty = PS.Data_Array_NonEmpty;
    var Data_Tuple_Nested = PS.Data_Tuple_Nested;
    var Css_Elements = PS.Css_Elements;
    var Css_Geometry = PS.Css_Geometry;
    var Css_Selector = PS.Css_Selector;
    var Css_Display = PS.Css_Display;
    var Css_Text = PS.Css_Text;
    var Css_Border = PS.Css_Border;
    var Css_Pseudo = PS.Css_Pseudo;
    var Css_Animation = PS.Css_Animation;
    var Css_Time = PS.Css_Time;
    var Css_Transition = PS.Css_Transition;
    var Data_Maybe = PS.Data_Maybe;
    var Css_Render = PS.Css_Render;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var DOM = PS.DOM;
    
  function addStyleSheet (s) {
    return function () {
      var e = document.createElement('style');
      e.appendChild(document.createTextNode(s));
      document.head.appendChild(e);
    };
  }
  ;
    
  function titleWidth () {
    return document.getElementById('title').offsetWidth;
  }
  ;
    
  function titleHeight () {
    return document.getElementById('title').offsetHeight;
  }
  ;
    
  function titleStyle (s) {
    return function () {
      document.getElementById('title').setAttribute('style', s);
    };
  }
  ;
    var shakeRight = Css_Transform.transforms([ Css_Transform.translate(Css_Size.px(3))(Css_Size.nil), Css_Transform.rotate(Css_Size.deg(2)) ]);
    var shakeLeft = Css_Transform.transforms([ Css_Transform.translate(Css_Size.px(-3))(Css_Size.nil), Css_Transform.rotate(Css_Size.deg(-2)) ]);
    var center = function (width) {
        return function (height) {
            return Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Geometry.marginLeft(Css_Size.px(-width / 2)))(function () {
                return Css_Geometry.marginTop(Css_Size.px(-height / 2));
            });
        };
    };
    var blue2 = Css_Color.rgb(238)(238)(255);
    var blue1 = Css_Color.rgb(51)(136)(204);
    var backgroundGradient = function (a) {
        return Css_Background.backgroundImage(Css_Gradient.linearGradient(a)(new Css_Gradient.ColorPoint(Css_Color.white, Css_Size.pct(0)))([  ])(new Css_Gradient.ColorPoint(blue2, Css_Size.pct(100))));
    };
    var style = Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Stylesheet.fontFace(Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_FontFace.fontFaceFamily(Css_String.fromString(Css_String.isStringString)("Lato")))(function () {
        return Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Font.fontWeight(Css_Font.weight(300)))(function () {
            return Css_FontFace.fontFaceSrc(Data_Array_NonEmpty[":|"](new Css_FontFace.FontFaceSrcLocal("Lato Light"))([ new Css_FontFace.FontFaceSrcLocal("Lato-Light"), new Css_FontFace.FontFaceSrcUrl("http://fonts.gstatic.com/s/lato/v11/EsvMC5un3kjyUhB9ZEPPwg.woff2", new Data_Maybe.Just(Css_FontFace.WOFF2.value)) ]));
        });
    })))(function () {
        return Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Stylesheet.keyframes("buzz-button")(Data_Array_NonEmpty[":|"](Data_Tuple_Nested.tuple2(50)(shakeRight))([ Data_Tuple_Nested.tuple2(100)(shakeLeft) ])))(function () {
            return Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Stylesheet["?"](Css_Elements.html)(Css_Geometry.height(Css_Size.pct(100))))(function () {
                return Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Stylesheet["?"](Css_Elements.body)(Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Font.fontFamily([ "Lato" ])(Data_Array_NonEmpty.singleton(Css_Font.sansSerif)))(function () {
                    return Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Size.sym(Css_Geometry.padding)(Css_Size.nil))(function () {
                        return Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Size.sym(Css_Geometry.margin)(Css_Size.nil))(function () {
                            return backgroundGradient(Css_Size.deg(0));
                        });
                    });
                })))(function () {
                    return Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Stylesheet["?"](Css_Selector["**"](Css_Elements.h1)(Css_Elements.a))(Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Display.display(Css_Display.block))(function () {
                        return Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Font.color(blue1))(function () {
                            return Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Text.textDecoration(Css_Text.noneTextDecoration))(function () {
                                return Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Font.fontWeight(Css_Font.weight(100)))(function () {
                                    return Css_Size.sym(Css_Geometry.padding)(Css_Size.em(0.5));
                                });
                            });
                        });
                    })))(function () {
                        return Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Stylesheet["?"](Css_Elements.h1)(Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Font.fontSize(Css_Size.em(3)))(function () {
                            return Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Display.position(Css_Display.absolute))(function () {
                                return Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Geometry.left(Css_Size.pct(50)))(function () {
                                    return Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Geometry.top(Css_Size.pct(50)))(function () {
                                        return Prelude[">>="](Css_Stylesheet.bindStyleM)(backgroundGradient(Css_Size.deg(180)))(function () {
                                            return Prelude[">>="](Css_Stylesheet.bindStyleM)(Css_Border.border(Css_Border.solid)(Css_Size.px(1))(blue1))(function () {
                                                return Css_Size.sym(Css_Border.borderRadius)(Css_Size.em(0.25));
                                            });
                                        });
                                    });
                                });
                            });
                        })))(function () {
                            return Css_Stylesheet["?"](Css_Selector["##"](Css_Elements.h1)(Css_Pseudo.hover))(Css_Animation.animation(Css_String.fromString(Css_Animation.isStringAnimationName)("buzz-button"))(Css_Time.sec(0.15))(Css_Transition.linear)(Css_Time.sec(0))(Css_Animation.infinite)(Css_Animation.normalAnimationDirection)(Css_Animation.forwards));
                        });
                    });
                });
            });
        });
    });
    var main = function __do() {
        Prelude["<<<"](Prelude.semigroupoidArr)(addStyleSheet)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.fromMaybe(""))(Css_Render.renderedSheet))(Css_Render.render(style))();
        var _35 = titleWidth();
        var _34 = titleHeight();
        return Prelude["<<<"](Prelude.semigroupoidArr)(titleStyle)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.fromMaybe(""))(Prelude["<<<"](Prelude.semigroupoidArr)(Css_Render.renderedInline)(Css_Render.render)))(center(_35)(_34))();
    };
    return {
        main: main, 
        center: center, 
        style: style, 
        shakeRight: shakeRight, 
        shakeLeft: shakeLeft, 
        backgroundGradient: backgroundGradient, 
        blue2: blue2, 
        blue1: blue1, 
        titleStyle: titleStyle, 
        titleHeight: titleHeight, 
        titleWidth: titleWidth, 
        addStyleSheet: addStyleSheet
    };
})();
PS.Site.main();


},{}]},{},[1])